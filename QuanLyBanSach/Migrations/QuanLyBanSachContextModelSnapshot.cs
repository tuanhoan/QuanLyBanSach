// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyBanSach.Data;

namespace QuanLyBanSach.Migrations
{
    [DbContext(typeof(QuanLyBanSachContext))]
    partial class QuanLyBanSachContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("QuanLyBanSach.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_Author");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.HasKey("Id")
                        .HasName("pk_Bill");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.BillDetail", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("bill_id");

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.HasKey("BillId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int")
                        .HasColumnName("publisher_id");

                    b.HasKey("Id")
                        .HasName("pk_Book");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_Category");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("EmloyeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_Customer");

                    b.HasIndex("EmloyeeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_Employee");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Import", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("empoyee_id");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("suplier_id");

                    b.HasKey("Id")
                        .HasName("pk_Import");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Imports");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.ImportDetail", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("ImportId")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.HasKey("BookId", "ImportId");

                    b.HasIndex("ImportId");

                    b.ToTable("ImportDetails");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_Publisher");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_Role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_Suplier");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Bill", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Customer", "CustomerNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_Bill_Customer")
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Employee", "EmployeeNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_Bill_Employee")
                        .IsRequired();

                    b.Navigation("CustomerNavigation");

                    b.Navigation("EmployeeNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.BillDetail", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Bill", "BillNavigation")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .HasConstraintName("fk_BillDetail_Bill")
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Book", "BookNavigation")
                        .WithMany("BillDetails")
                        .HasForeignKey("BookId")
                        .HasConstraintName("fk_BillDetail_Book")
                        .IsRequired();

                    b.Navigation("BillNavigation");

                    b.Navigation("BookNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Book", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Author", "AuthorNavigation")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Category", "CategoryNavigation")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_Book_Category")
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Publisher", "PublisherNavigation")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("fk_Book_Publisher")
                        .IsRequired();

                    b.Navigation("AuthorNavigation");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("PublisherNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Customer", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Employee", "EmployeeNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("EmloyeeId")
                        .HasConstraintName("fk_Customer_Employee")
                        .IsRequired();

                    b.Navigation("EmployeeNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Employee", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Role", "RoleNaviagtion")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_Employee_Role")
                        .IsRequired();

                    b.Navigation("RoleNaviagtion");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Import", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Employee", "EmployeeNavigation")
                        .WithMany("Imports")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_Import_Employee")
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Supplier", "SupplierNavigation")
                        .WithMany("Imports")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("fk_Import_Supplier")
                        .IsRequired();

                    b.Navigation("EmployeeNavigation");

                    b.Navigation("SupplierNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.ImportDetail", b =>
                {
                    b.HasOne("QuanLyBanSach.Models.Book", "BookNavigation")
                        .WithMany("ImportDetails")
                        .HasForeignKey("BookId")
                        .HasConstraintName("fk_ImportDetail_Book")
                        .IsRequired();

                    b.HasOne("QuanLyBanSach.Models.Import", "ImportNavigation")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ImportId")
                        .HasConstraintName("fk_ImportDetail_Import")
                        .IsRequired();

                    b.Navigation("BookNavigation");

                    b.Navigation("ImportNavigation");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Book", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Customer", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Customers");

                    b.Navigation("Imports");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Import", b =>
                {
                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("QuanLyBanSach.Models.Supplier", b =>
                {
                    b.Navigation("Imports");
                });
#pragma warning restore 612, 618
        }
    }
}
